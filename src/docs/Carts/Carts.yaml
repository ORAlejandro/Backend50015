tags:
  - name: Users
paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: User's first name
                  example: John
                last_name:
                  type: string
                  description: User's last name
                  example: Doe
                email:
                  type: string
                  description: User's email address
                  example: user@example.com
                password:
                  type: string
                  description: User's password
                  example: password123
                age:
                  type: integer
                  description: User's age
                  example: 25
      responses:
        200:
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: User created successfully
        400:
          description: User already exists or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: El usuario ya existe  # Adapt message based on your implementation
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Error interno del servidor  # Adapt message based on your implementation

  /login:
    post:
      summary: Login a user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email address
                  example: user@example.com
                password:
                  type: string
                  description: User's password
                  example: password123
      responses:
        200:
          description: User logged in successfully
          headers:
            Set-Cookie:
              description: Sets a cookie with the JWT token
        401:
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Usuario no v√°lido  # Adapt message based on your implementation
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Error interno del servidor  # Adapt message based on your implementation

  /profile:
    get:
      summary: Get user profile information
      tags:
        - Users
      security:
        - jwt: []  # Assuming you use JWT authentication for profile access
      responses:
        200:
          description: User profile information
          content:
            application/json:
              schema:
                type: object
                # Add properties for user profile information (first_name, last_name, etc.)
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: Error interno del servidor  # Adapt message based on your implementation

  /logout:
    post:
      summary: Log out user
      tags:
        - Users
      responses:
        200:
          description: User logged out successfully

  /admin:
    get:
      summary: Access admin panel (protected route)
      tags:
        - Users
      security:
        - jwt: []  # Assuming you use JWT authentication for admin access
      responses:
        200:
          description: Admin panel content
        403:
          description: Forbidden access (user is not admin)
          
